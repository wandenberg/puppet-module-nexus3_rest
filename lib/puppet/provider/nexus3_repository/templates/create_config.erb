def config = new org.sonatype.nexus.repository.config.Configuration()
config.repositoryName = '<%= resource[:name] %>'
config.recipeName = '<%= resource[:provider_type] %>-<%= resource[:type] %>'
config.online = <%= resource[:online] %>
def storage = config.attributes('storage')
storage.set('blobStoreName', '<%= resource[:blobstore_name] %>')
storage.set('strictContentTypeValidation', <%= resource[:strict_content_type_validation] %>)
<%- if resource[:type] == :hosted -%>
storage.set('writePolicy', '<%= WRITE_POLICY_MAPPING[resource[:write_policy]] %>')
<%- elsif resource[:type] == :proxy -%>
def proxy = config.attributes('proxy')
proxy.set('remoteUrl', '<%= resource[:remote_url] %>')
<%- end -%>
<%- if resource[:remote_auth_type] == :none -%>
config.getAttributes().remove('httpclient')
<%- else -%>
def httpclient = config.attributes('httpclient');
def authentication = httpclient.child('authentication');
authentication.set('type', '<%= resource[:remote_auth_type] %>');
authentication.set('username', '<%= resource[:remote_user] %>');
authentication.set('password', '<%= resource[:remote_password] %>');
authentication.set('ntlmHost', '<%= resource[:remote_ntlm_host] %>');
authentication.set('ntlmDomain', '<%= resource[:remote_ntlm_domain] %>');
<%- end -%>
<%- if resource[:provider_type] == :apt -%>
def apt = config.attributes('apt')
apt.set('distribution', '<%= resource[:distribution] %>')
apt.set('flat', '<%= resource[:is_flat] %>')
<%- if resource[:type] == :hosted -%>
def aptSigning = config.attributes('aptSigning')
aptSigning.set('keypair', '<%= resource[:pgp_keypair] %>')
aptSigning.set('passphrase', '<%= resource[:pgp_keypair_passphrase] %>')
def aptHosted = config.attributes('aptHosted')
aptHosted.set('assetHistoryLimit', '<%= resource[:asset_history_limit] %>')
<%- end -%>
<%- end -%>
<%- if resource[:provider_type] == :maven2 -%>
def maven = config.attributes('maven')
maven.set('versionPolicy', '<%= resource[:version_policy].upcase %>')
maven.set('layoutPolicy', '<%= resource[:layout_policy].upcase %>')
<%- end -%>
<%- if resource[:provider_type] == :yum -%>
def yum = config.attributes('yum')
yum.set('repodataDepth', <%= resource[:depth]  %>)
<%- end -%>
<%- if resource[:provider_type] == :docker -%>
def docker = config.attributes('docker')
<%- if resource[:type] == :proxy -%>
def dockerProxy = config.attributes('dockerProxy')
dockerProxy.set('indexType', '<%= DOCKER_PROXY_INDEX_TYPE[resource[:index_type]] %>')
<%- if resource[:index_type] == :custom -%>
dockerProxy.set('indexUrl', '<%= resource[:index_url] %>')
<%- end -%>
<%- end -%>
<%- if defined? resource[:http_port] -%>
docker.set('httpPort', '<%= resource[:http_port] %>')
<%- end -%>
<%- if defined? resource[:https_port] -%>
docker.set('httpsPort', '<%= resource[:https_port] %>')
<%- end -%>
docker.set('v1Enabled', '<%= resource[:v1_enabled] %>')
docker.set('forceBasicAuth','<%= resource[:force_basic_auth] %>')
<%- end -%>
repository.repositoryManager.create(config)
